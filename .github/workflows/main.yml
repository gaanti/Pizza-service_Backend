name: Update Amazon ECS app
env:
  CLUSTER: "Pizza-should-work"
  SERVICE: "AppFrontBack"
  CONTAINER_NAME: "api"
  ECR_REPOSITORY: "pizza_backend"
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build_docker_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition App1 --query taskDefinition > task-definition.json
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        run: |
          docker build -t ${{ steps.login-ecr.outputs.registry }}/${{env.ECR_REPOSITORY}}:${{ github.sha }} .
          docker push ${{ steps.login-ecr.outputs.registry }}/${{env.ECR_REPOSITORY}}:${{ github.sha }}
          echo "::set-output name=image::${{ steps.login-ecr.outputs.registry }}/${{env.ECR_REPOSITORY}}:${{ github.sha }}"
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{env.CONTAINER_NAME}}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{env.SERVICE}}
          cluster: ${{env.CLUSTER}}
          wait-for-service-stability: true
